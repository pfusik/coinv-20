TEMPO	equ	10
LINES	equ	80
BRUSHW	equ	3

scr	equ	$3200

src	equ	$80
dest	equ	$82
px	equ	$84
py	equ	$85
counter	equ	$90
counter_bcd	equ	$94

	org	$2800
main
	lda:tay	#0
	sta	dest
	ldx	>scr
cls_page
	stx	dest+1
	sta:rne	(dest),y+
	inx
	cpx	>scr+LINES*32
	bcc	cls_page

	jsr	w1
	mva	#$21	$22f
	mwa	#dl	$230
	mwa	#trace	src
:3	jsr	draw

rainbow_loop
	lda	#15
	cmp:rne	^4b
	ldy	#LINES*2+4
	ldx	20
rainbow_line
	txa
	cmp	#$10
	scs:ora	#$10	; no grey
	sta	^4a
	sta	^16
	inx
	dey
	bne	rainbow_line
	jmp	rainbow_loop

draw
	mva	(src),0	px
	inw	src
	mva	(src),y	py
draw_loop
	inw	src
	lda	#TEMPO
	jsr	w8
	jsr	plot
	jsr	print_counter
	lda	(src),0
	bmi	draw_ret
	and	#3
	sub	#1
	add:sta	px
	lda	(src),y
:2	lsr	@
	sub	#1
	add:sta	py
	jmp	draw_loop
draw_ret
	inw	src
	rts

plot
; yyy yyyyxxxx xxx
	mva	px	dest
	and	#7
	tax
	asl	dest
	lda	py
	lsr	@
	ror	dest
	lsr	@
	ror	dest
	lsr	@
	ror	dest
	lsr	@
	ror	dest
	and	#7
	add	>scr
	sta	dest+1
	lda	masks,x
	ora:sta	(dest),y
	ift	BRUSHW==2
	cpx	#7
	bcc	plot_ret
	iny
	lda	#$80
	ora:sta	(dest),y
plot_ret
	eli	BRUSHW==3
	cpx	#6
	bcc	plot_ret
	iny
	lda	masks_right-6,x
	ora:sta	(dest),y
plot_ret
	eif
	rts

print_counter
	mva	px	counter+1
	lda	#LINES
	sub	py
	lsr	@
	ror	counter+1
	lsr	@
	ror	counter+1
	sta	counter+2

	mva	#0	counter
	sta	counter_bcd
	sta	counter_bcd+1
	sta	counter_bcd+2
	sta	counter_bcd+3

	sed
	ldx	#24
counter_to_bcd
	asl	counter
	rol	counter+1
	rol	counter+2
	lda	counter_bcd
	adc:sta	counter_bcd
	lda	counter_bcd+1
	adc:sta	counter_bcd+1
	lda	counter_bcd+2
	adc:sta	counter_bcd+2
	lda	counter_bcd+3
	adc:sta	counter_bcd+3
	dex
	bne	counter_to_bcd
	cld

	ldx	#3
	ldy	#0
print_counter_out
	lda	counter_bcd,x
:4	lsr	@
	jsr	print_digit
	lda	counter_bcd,x
	and	#$f
	jsr	print_digit
	dex
	bpl	print_counter_out
	rts

print_digit
	bne	print_nonzero
	cmp	counter_str-1,y
	beq	print_space
	cpy	#0
	beq	print_space
print_nonzero
	ora	#'0'-$20
print_space
	sta	counter_str,y+
	rts

w1
	lda	#1
w8
	add	20
	cmp:rne	20
	rts

dl
:3	dta	$70
	dta	$4b,a(scr)
:LINES-1	dta	$b
	dta	$70
	dta	$42,a(scroll)
	dta	$41,a(dl)

scroll
	dta	d'Total Coronavirus Cases:'
counter_str
	dta	d'        '
	ert	[*^dl]&$fc00

	ert	*>scr

masks
:8	dta	[[$ff>>BRUSHW]^$ff]>>#
	ift	BRUSHW==3
masks_right
	dta	$80,$c0
	eif

trace
	icl	'trace.asx'

	run	main
